# GLOBALS
global
master-worker
mworker-max-reloads 3
daemon
log stdout format raw sample 1:10 local1 info
log stdout format raw local2 err
chroot /var/lib/haproxy
pidfile /var/run/haproxy.pid
stats timeout 20s
user haproxy
group haproxy
stats socket /var/lib/haproxy/stats

# Distribute the health checks with a bit of randomness
#spread-checks 5

# Threading / cpu map set
nbthread 4
cpu-map auto:1/1-4 0-3

# SSL
# Mozilla intermediate configuration
ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
ssl-dh-param-file /etc/haproxy/ssl/dhparam-2048.pem

# cache SSL performance https://www.haproxy.com/documentation/aloha/12-0/traffic-management/lb-layer7/tls/
tune.ssl.cachesize 100000
tune.ssl.lifetime 600
tune.ssl.maxrecord 1460

tune.bufsize 32768
# Global default values
defaults
# Logging
log global

# HTTP mode config
mode http

option log-health-checks
option abortonclose
# TIMEOUTS
timeout http-request 4s
timeout client  30s
timeout server  30s
timeout connect 1s
timeout http-keep-alive 3s
timeout tunnel 2m
timeout client-fin 1s
timeout server-fin 1s

# perf tune
retries 3
maxconn 1048576
option redispatch
option httplog
option splice-auto

# Auth password
# printf "whatever_password" | mkpasswd --stdin --method=sha-256
userlist mk_auth
user mk password $5$SFWOOri/80/su$R4Ink6l2K1rAfrofn3sYKWKDnzZXw5lByC9CA8zg6xB


frontend mk-http
option clitcpka
option http-keep-alive
bind :80 name httpv4
bind :::80 name httpv6 v6only
bind :443 name httpsv4 alpn h2,http1.1 tfo ssl crt /etc/haproxy/ssl/haproxy_ecc.pem 
bind :::443 name httpsv6 v6only alpn h2,http1.1 tfo ssl crt /etc/haproxy/ssl/haproxy_ecc.pem 

# ACL
acl acl_next hdr(host) -i mkreg.dev
acl acl_nonfqdn hdr(host) -i www.mkreg.dev
acl url_static capture.req.uri  -m end .gif .png .jpg .css .js .jpeg .png .svg .woff2
acl is_next_image capture.req.uri -m beg /_next/image
acl is_sitemap capture.req.uri -m end /sitemap.xml
acl is_rss capture.req.uri -m end /rss.xml
acl is_ha_stats hdr(host) -i ha.mkreg.dev
acl auth_acl http_auth(mk_auth)

# Response headers
# HSTS (31536000 seconds = 1 year)
http-response set-header Strict-Transport-Security max-age=31536000;\ includeSubDomains;\ preload 
# Permissions Policy
http-response set-header Permissions-Policy "camera=(), microphone=(), geolocation=()"
# X-Content-Type-Options
http-response set-header X-Content-Type-Options nosniff
# X-DNS-Prefetch-Control
http-response set-header X-DNS-Prefetch-Control on
# X-Xss-Protection (for Chrome, Safari, IE)
http-response set-header X-Xss-Protection 1;\ mode=block
# X-Frame-Options (DENY or SELF)
http-response set-header X-Frame-Options DENY
# Delete Server Header
http-response del-header Connection
# Delete Proxy Header
http-request del-header Proxy
# Revealing HTTPS URLs When Navigating Away to HTTP Sites
http-response set-header Referrer-Policy strict-origin-when-cross-origin
# X-Download-Options
http-response set-header X-Download-Options noopen

# capture headers
http-request capture req.hdr(CF-Connecting-IP) len 32
http-request capture req.hdr(CF-IPCountry) len 2
http-request capture req.hdr(User-Agent) len 64
capture response header Content-length len 9

# Redirects
http-request redirect scheme https code 301 unless { ssl_fc }
http-request redirect code 301 location https://mkreg.dev%[capture.req.uri] if acl_nonfqdn 

# Rewrites
http-request set-path /api/sitemap if is_sitemap
http-request set-path /api/rss if is_rss

# Caching headers
# Default header
http-response set-header Cache-Control "public, max-age=0, s-maxage=300" if !url_static

# next/image cache on CDN / next srv
http-request set-header Cache-Control "public, s-maxage=2678400" if is_next_image
http-response set-header Cache-Control "public, max-age=0, s-maxage=2678400" if is_next_image
# rss / sitemap TTL
http-response set-header Cache-Control "public, s-maxage=3600" if is_rss or is_sitemap
# ignore /meta files favico etc
http-response set-header Cache-Control "public, no-transform" if { capture.req.uri -m beg /meta }
# fonts
http-response set-header Cache-Control "public, max-age=31536000, immutable" if { capture.req.uri -m beg /static/fonts }
http-response set-header Access-Control-Allow-Origin  "*" if { capture.req.uri -m beg /static/ }

# Auth for stats
http-request auth realm Nope if is_ha_stats !auth_acl


# use backends
use_backend next if acl_next
use_backend haproxy if is_ha_stats 

default_backend next

# BACK ENDS
backend next
option srvtcpka
option httpchk
http-check send meth HEAD uri / ver HTTP/1.1
option http-keep-alive
server srv mk-next:3000 check inter 5s

backend haproxy
option tcp-check
stats enable
stats hide-version
stats uri /
stats realm HAProxy\ Statistics
stats refresh 5s
