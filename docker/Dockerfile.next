# Install dependencies
FROM node:16.13.0-alpine3.14 AS deps

# https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine
RUN apk add --no-cache libc6-compat

WORKDIR /app
ENV YARN_VERSION=3.0.2
COPY .yarn/ ./.yarn
COPY package.json yarn.lock .yarnrc.yml ./
RUN yarn install --immutable

# Rebuild the source code 
FROM node:16.13.0-alpine3.14 AS builder

# https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine
RUN apk add --no-cache libc6-compat

ENV YARN_VERSION=3.0.2
WORKDIR /app
COPY . .
COPY --from=deps /app/node_modules ./node_modules
RUN yarn build

# Production image, copy all the files and run next
FROM node:16.13.0-alpine3.14 AS runner

# https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine
RUN apk add --no-cache libc6-compat

#https://github.com/krallin/tini
RUN apk add --no-cache tini

WORKDIR /app
ENV YARN_VERSION=3.0.2
ENV NODE_ENV production

COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/public ./public
COPY --from=builder --chown=node:node /app/.next ./.next
COPY --from=builder --chown=node:node /app/src ./src
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./
COPY --from=builder /app/.prettierrc.js ./

USER node

EXPOSE 3000

ENV NEXT_TELEMETRY_DISABLED 1

ENTRYPOINT ["/sbin/tini", "--"]

CMD ["node_modules/.bin/next", "start"]