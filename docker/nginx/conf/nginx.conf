# run with nginx user
user  nginx;
# enable PCRE JIT compiler for faster location blocks parsing
# https://nginx.org/en/docs/ngx_core_module.html#pcre_jit
pcre_jit on;

# CPU cores : cat /proc/cpuinfo | grep 'processor' | wc -l
# if there is a backend in the same server, don't let nginx take all cores.
# here we have proxy NextJS
# we let nginx take 2 core, it's pretty much enough combined with cloudflare
worker_processes 2;



# Bind worker processes to a set of CPU
# Do your reasearch about CPU affinity before adjusting the defaults
# https://nginx.org/en/docs/ngx_core_module.html#worker_cpu_affinity

worker_cpu_affinity 0101 1010;

# Deciding worker_rlimit_nofile and worker_processes values
# First, read about linux ulimits systemd, selinux and how it applies to docker before tuning this settings
# https://serverfault.com/questions/787919/optimal-value-for-nginx-worker-connections
# https://github.com/digitalocean/nginxconfig.io/blob/ae322cf2c5c070164d18ccec55cf764cca058acf/README.md#-resources

# set RLIMIT_NOFILE for workers opened files, which inclues opened files with the proxied server
# multiply by 2 because we use it as a reverse proxy, 1 for the proxied server and 1 for the client.
# incase static serving then we don't multiply because NGINX will open only 1 file for each request from the client.

# e.g: worker_processes = 5 | worker_connections = 8096 | NGINX acting as a reverse proxy
# then worker_rlimit_nofile = 8096 * 5 * 2 = 80960
worker_rlimit_nofile 80960;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  8096;
    multi_accept        on;
    use                 epoll;
    # https://www.nginx.com/blog/socket-sharding-nginx-release-1-9-1/
    accept_mutex off;
}

http {
    include mime.types;
    default_type  application/octet-stream;
    charset utf-8;
    charset_types text/css
        text/markdown
        application/javascript
        image/apng
        image/gif
        image/jpeg
        image/png
        image/svg+xml
        application/xml+rss
        application/json
        font/woff
        font/woff2
        image/webp
        image/x-icon
        application/manifest+json;

    #log_format  main  '$host - $http_cf_ipcountry - $http_x_forwarded_for - $remote_user [$time_local] "$request" '
    #    '$status $body_bytes_sent "$http_referer" '
    #    '"$http_user_agent"';

    #access_log  /var/log/nginx/access.log  main;
    # use HAproxy logs
    access_log  off;

    sendfile   on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    tcp_nodelay on;
    reset_timedout_connection   on;
    server_tokens   off;
    server_name_in_redirect off;
    server_names_hash_max_size  512;
    server_names_hash_bucket_size   512;
    client_max_body_size 3M;
    include /etc/nginx/compression.conf;
    include /etc/nginx/conf.d/*.conf;
}

